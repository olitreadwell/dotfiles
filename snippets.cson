'.source.js':
  'whatsup':
    'prefix': 'whatsup'
    'body': 'yo yo yo'
  'knexDbEnv':
    'prefix': 'knexDbEnv'
    'body': """
      // '$2' Environment Knex DB Config
      $2: {
        client: knexDbEnvDefaultConfig.client,
        migrations: knexDbEnvDefaultConfig.migrations,
        connection: {
          database: '`${appName}_$2`',
        },
        seeds: {
          directory: './db/seeds/$2',
        },
      },
    """
  'Express Modules':
    'prefix': 'express modules'
    'body': """
      // instantiate express app
      const express = require('express');
      const app = express();

      const path = require('path');
      const methodOverride = require('method-override');
      const morgan = require('morgan');
      const bodyParser = require('body-parser');
    """
  'Express Middleware':
    'prefix': 'express middleware'
    'body': """
      // set view engine
      app.set('view engine', 'ejs');

      // set path for view files
      app.use(express.static(path.join(__dirname, '/views')));

      app.use(morgan('tiny'));
      app.use(bodyParser.urlencoded({
        extended: true,
      }));

      //Use URL parameter based override
      app.use(methodOverride('_method'));
    """

# '.text.html.basic'
# '.source.css'
# '.source.sass'
# '.text.html.php'
# '.source.java'
# '.text.html.erb'
# '.source.python'

# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
#
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson
